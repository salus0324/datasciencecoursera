names(sub1[,1:2])
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch=19, ylab="Walkdown Cluster")
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnamesm '|')
cnames <- strsplit(cnamesm, '|')
cnames <- strsplit(cnamesm, "|")
cnames <- strsplit(cnamesm, "|", fixed =  TRUE)
cnames <- strsplit(cnames, "|", fixed =  TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
names(airquality)
library(swirl)
swirl()
swirl()
install_from_swirl("Statistical Inference")
library(swirl
)
swirl()
swirl()
swirl()
1*1/6+2*1/6+3*1/6+4*1/6+5*1/6+6*1/6
print(g2)
head(sh)
nh
median(resampledMedians)
median(sh)
sample(fh, nh*B, replace=T)
sam <- sample(fh, nh*B, replace=T)
sam <- sample(fh, nh*B, replace=TRUE)
resam <- matrix(sam, B, nh)
apply(resam, 1, median)
meds <- apply(resam, 1, median)
median(fh)-median(meds)
sd(meds)
sd(resampledMedians)
quantile(resampledMedians, c(0.025,0.975))
quantile(meds, c(0.025,0.975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
group
testStat
obs <- testStat(BCcounts, group)
obs
apply(Bdata$count-Cdata$count,1,mean)
apply(Bdata$count-Cdata$count,mean)
mean(Bdata$count-Cdata$count)
sample(group)
perms <- sapply(1:10000, function(i) testStat(BCcount, sample(group)))
perms <- sapply(1:10000, function(i) testStat(BCcounts, sample(group)))
mean(perms[>0bs])
mean(perms[>obs])
mean(perms[perms>obs]])
mean(perms[perms>obs])
mean(persm>obs)
mean(perms>obs)
testStat(DEcounts,group)
perms <- sapply(1:10000, function(i) testStat(DEcounts, sample(group)))
?var
?rexp
data("ToothGrowth")
str(ToothGrowth)
head(ToothGrowth)
?ToothGrowth
data <- ToothGrowth
head(data)
?ToothGrowth
data <- ToothGrowth
hist(data, main = "Histogram of ToothGrowth data", xlab = "Tooth growth length")
data <- ToothGrowth
hist(data$len, main = "Histogram of ToothGrowth data", xlab = "Tooth growth length")
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
?boxplot
head(data)
head(VC)
VC <- subset(ToothGrowth, supp=='VC')
OJ <- subset(ToothGrowth, supp=='OJ')
VC <- subset(ToothGrowth, supp=='VC')
VC <- subset(ToothGrowth, supp=='VC')
head(VC)
VC <- subset(ToothGrowth, supp=='VC')$len
OJ <- subset(ToothGrowth, supp=='OJ')$len
len(VC)
length(VC)
?t.test
VC <- subset(ToothGrowth, supp=='VC')$len
OJ <- subset(ToothGrowth, supp=='OJ')$len
t.test(VC, OJ, alternative = "two.sided", var.equal = FALSE)
dose0.5 <- subset(ToothGrowth, dose==0.5)$len
dose2.0<- subset(ToothGrowth, dose==2)$len
t.test(dose0.5, dose2.0, alternative = "two.sided", var.equal = FALSE)
library(swirl)
swirl()
install_from_swirl("Regression Models")
swirl()
swirl()
plot(child~parent, galton)
plot(jitter(child,4)~parent, galton)
regrline <- lm(child~parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
fit <- lm(child~parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
rhs=lhs
lhs-rhs
all.equal(lhs-rhs)
all.equal(lhs,rhs)
varChild <- var(child)
varChild <- var(galton$child)
var(fit$residuals)
varRes <- var(fit$residuals)
VarEst <- var(est(ols.slope, ols.ic))
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRes+varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
# Load knitr library
library(knitr)
dataset(mtcars)
data(mtcars)
# Summary of the mtcars
summary(mtcars)
?mtcars
# Summary of the mtcars
summary(c(mtcars$mpg, mtcars$am))
# Summary of the mtcars
data <- mtcars
# Summary of the mtcars
data <- mtcars[, c("mpg","am")]
summary(mtcars$mpg, mtcars$am))
summary(data)
describe(data)
str(data)
dim(data)
head(data)
# Summary of the mtcars
data <- mtcars[, c("mpg","am")]
str(data)
dim(data)
head(data)
summary(data)
?boxplot
# Boxplot of the data
boxplot(mtcars$mpg~factor(mtcars$am))
library(ggplot2)
# Boxplot of the data
p <- ggplot(data, aes(x=am, y=mpg)) +
geom_boxplot()
p
# Boxplot of the data
p <- ggplot(data, aes(x=factor(am), y=mpg)) +
geom_boxplot()
p
# Boxplot of the data
p <- ggplot(data, aes(x=factor(am), y=mpg), color=am) +
geom_boxplot()
p
# Boxplot of the data
p <- ggplot(data, aes(x=factor(am), y=mpg, color=am)) +
geom_boxplot()
p
mtcars[,"am"] <- factor(mtcars[,"am"])
# Summary of the mtcars
summary(data)
# Observe the structure and dimension of the data
str(data)
# Subset the data frame to have only "mpg" and "am" columns"
data <- mtcars[, c("mpg","am")]
mtcars$am <- as.factor(mtcars$am)
# Observe the structure and dimension of the data
str(data)
dim(data)
library(ggplot2)
# Boxplot of the data
p <- ggplot(data, aes(x=am, y=mpg, color=am)) +
geom_boxplot()
p
# Boxplot of the data
p <- ggplot(data, aes(x=am, y=mpg, color=am))
+ geom_boxplot()
+ geom_boxplot() + labs(title = "Boxplot of mtcars data", xlab="Transmission", ylab="mpg")
# Boxplot of the data
p <- ggplot(data, aes(x=am, y=mpg, color=am)) + geom_boxplot() + labs(title = "Boxplot of mtcars data", xlab="Transmission", ylab="mpg")
# Boxplot of the data
p <- ggplot(data, aes(x=am, y=mpg, color=am)) + geom_boxplot() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab=("mpg")
# Boxplot of the data
p <- ggplot(data, aes(x=am, y=mpg, color=am)) + geom_boxplot() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")
p
# Boxplot of the data
p <- ggplot(data, aes(x=am, y=mpg, color=am)) + geom_boxplot() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")+scale_fill_dscrete(labels=c("0: Automatic", "1: Manual"))
# Boxplot of the data
p <- ggplot(data, aes(x=am, y=mpg, color=am)) + geom_boxplot() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")+scale_fill_dscrete(labels=c("0: Automatic", "1: Manual")))
# Boxplot of the data
p <- ggplot(data, aes(x=am, y=mpg, color=am)) + geom_boxplot() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")+scale_fill_dscrete(labels=c("0: Automatic", "1: Manual"))
# Boxplot of the data
p <- ggplot(data, aes(x=am, y=mpg, color=am)) + geom_boxplot() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")+scale_fill_discrete(labels=c("0: Automatic", "1: Manual"))
p
# Boxplot of the data
p <- ggplot(data, aes(x=am, y=mpg, color=am)) + geom_boxplot() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")+scale_color)manual(labels=c("0: Automatic", "1: Manual"))
# Boxplot of the data
p <- ggplot(data, aes(x=am, y=mpg, color=am)) + geom_boxplot() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")+scale_color_manual(labels=c("0: Automatic", "1: Manual"))
p
# Boxplot of the data
p <- ggplot(data, aes(x=am, y=mpg, color=am)) + geom_boxplot() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")+scale_shape_discrete(labels=c("0: Automatic", "1: Manual"))
p
# Boxplot of the data
p <- ggplot(data, aes(x=am, y=mpg, color=am)) + geom_boxplot() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")
p
# Boxplot of the data
p <- ggplot(data, aes(x=am, y=mpg, color=am)) + geom_boxplot() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")
p
# Boxplot of the data
p <- ggplot(data, aes(x=am, y=mpg, group=am)) + geom_boxplot() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")
p
# Boxplot of the data
p <- ggplot(data, aes(x=am, y=mpg, group=am, color=am)) + geom_boxplot() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")
p
mtcars$am <- as.factor(mtcars$am)
# Summary of the mtcars
summary(data)
# Observe the structure and dimension of the data
str(data)
dim(data)
# Subset the data frame to have only "mpg" and "am" columns"
data <- mtcars[, c("mpg","am")]
# Summary of the mtcars
summary(data)
dim(data)
# Boxplot of the data
p <- ggplot(data, aes(x=am, y=mpg, color=am)) + geom_boxplot() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")
p
# Boxplot of the data
p <- ggplot(data, aes(x=as.factor(am), y=mpg, color=factor(am, labels = c("0: Automatic", "1: Manual")))) + geom_boxplot() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")
p
# Boxplot of the data
p <- ggplot(data, aes(x=as.factor(am), y=mpg, color=factor(am, labels = c("0: Automatic", "1: Manual")))) + geom_boxplot() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")+labs(color="Transmission Type")
p
p <- ggplot(data, aes(x=as.factor(am), y=mpg, color=factor(am, labels = c("0: Automatic", "1: Manual")))) + geom_points) + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")+labs(color="Transmission Type")
# Boxplot of the data
p <- ggplot(data, aes(x=as.factor(am), y=mpg, color=factor(am, labels = c("0: Automatic", "1: Manual")))) + geom_points() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")+labs(color="Transmission Type")
```{r, echo=T}
library(ggplot2)
# Boxplot of the data
p <- ggplot(data, aes(x=as.factor(am), y=mpg, color=factor(am, labels = c("0: Automatic", "1: Manual")))) + geom_points() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")+labs(color="Transmission Type")
# Boxplot of the data
p <- ggplot(data, aes(x=as.factor(am), y=mpg, color=factor(am, labels = c("0: Automatic", "1: Manual")))) + geom_point() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")+labs(color="Transmission Type")
p
# Boxplot of the data
summary(lm(mpg~as.factor(am), data))
resid(lm)
plot(data$mpg, lm.fit())
plot(data$mpg, resid(lm)
plot(data$mpg, resid(lm))
# Boxplot of the data
lm <- summary(lm(mpg~as.factor(am), data))
plot(data$mpg, resid(lm))
plot(data$am, resid(lm), ylab="Residual plot of linear model fit", xlab="mpg")
plot(data$am, resid(lm), ylab="Residual plot of linear model fit", xlab="mpg")
# Boxplot of the data
lm <- summary(lm(mpg~am, data))
plot(data$am, resid(lm), ylab="Residual plot of linear model fit", xlab="mpg")
# Boxplot of the data
lm <- summary(lm(mpg~am, data))
# Boxplot of the data
lm <- summary(lm(mpg~am, data))
# Linear model fit
lmfit <- summary(lm(mpg~am, data))
# Linear model fit
lmfit <- summary(lm(mpg~am, data))
lmfit
plot(data$am, resid(lm), ylab="Residual plot of linear model fit", xlab="mpg")
plot(lmfit)
# Linear model fit
lmfit <- summary(lm(mpg~am, data))
plot(lmfit)
# Linear model fit
lmfit <- lm(mpg~am, data)
plot(lmfit)
plot(lmfit)[0]
# Linear model fit
lmfit <- lm(mpg~am, data)
summary(lmfit)
# Boxplot of the data
p <- ggplot(data, aes(x=as.factor(am), y=mpg, color=factor(am, labels = c("0: Automatic", "1: Manual")))) + geom_boxplot() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")+labs(color="Transmission Type")
p
plot(lmfit)[0]
plot(data$am, resid(lm), ylab="Residual plot of linear model fit", xlab="mpg", main = "Residual vs am")
plot(lmfit)
summary(lmfit)
predict(lmfitcars.lm, interval = 'confidence')
predict(lmfitcars, interval = 'confidence')
predict(lmfit, interval = 'confidence')
confint(lmfit)
summary(lmfit)
# Linear model fit
confint(lmfit)
plot(lmfit)
# Linear model fit
confint(lmfit)
plot(data$am, resid(lm), ylab="Residual plot of linear model fit", xlab="mpg", main = "Residual vs am")
glm(mpg,lm,data, family=gaussian(link="identity"))
?glm
glm(mpg ~ lm, data=data, family = gaussian(linke="identity")
)
glm(mpg ~ lm, data=data, family = gaussian(link="identity"))
glm(mpg ~ am, data=data, family = gaussian(link="identity"))
plot(data$mpg)
hist(data$mpg)
hist(data[,am=1]$mpg)
hist(data[,data$am=1]$mpg)
hist(data[,"am"=1]$mpg)
hist(data[,"am"==1]$mpg)
hist(data[,1]$mpg)
data[,am=1]
data[am=1]
data["am"=1]
data[data$am=1]
data[data$am=1,]
data[am=1,]
?filter
filter(data, am=1)
filter(data$am, 1)
data[is.element(data$am, 1),]
data[is.element(data$am, 1),]$mpg
hist(data[is.element(data$am, 1),]$mpg)
hist(data[is.element(data$am, 0),]$mpg)
len(data[is.element(data$am, 0),]$mpg)
dim(data[is.element(data$am, 0),]$mpg)
hist(data[is.element(data$am, 1),]$mpg)
hist(data[is.element(data$am, 0),]$mpg)
# Linear model fit
data <- mtcars[, c("mpg","am", "wt")]
lmfit <- summary(lm(mpg~am+wt, data))
summary(lmfit)
# Linear model fit
data <- mtcars[, c("mpg","am", "wt")]
# Linear model fit
lmfit <- lm(mpg~am, data)
summary(lmfit)
# lmfit coefficients confidence interval
confint(lmfit)
# Residual plot of lmfit model
plot(data$am, resid(lm), ylab="Residual plot of linear model fit", xlab="mpg", main = "Residual vs am")
##Linear regression model fitting with extra variable
```{r, echo=T}
# Linear model fit
data <- mtcars[, c("mpg","am", "wt")]
# Linear model fit
data <- mtcars[, c("mpg","am", "wt")]
lmfit <- lm(mpg~am+wt, data)
summary(lmfit`)
summary(lmfit)
# Linear model fit
data <- mtcars[, c("mpg","am", "wt")]
)
# Linear model fit
data <- mtcars[, c("mpg","am", "wt")]
lmfit <- lm(mpg~am+wt, data)
summary(lmfit)
?mtcars
# Linear model fit
data <- mtcars[, c("mpg","am", "cyl")]
lmfit <- lm(mpg~am+cyl, data)
summary(lmfit)
# Linear model fit
data <- mtcars[, c("mpg","am", "gear")]
summary(lmfit)
# Linear model fit
data <- mtcars[, c("mpg","am", "gear")]
lmfit <- lm(mpg~am+gear, data)
summary(lmfit)
# Linear model fit
data <- mtcars[, c("mpg","am", "disp")]
lmfit <- lm(mpg~am+gear, data)
lmfit <- lm(mpg~am+disp, data)
summary(lmfit)
# Linear model fit
data <- mtcars[, c("mpg","am", "hp")]
lmfit <- lm(mpg~am+disp, data)
summary(lmfit)
# Linear model fit
data <- mtcars[, c("mpg","am", "hp")]
lmfit <- lm(mpg~., mtcars)
summary(lmfit)
?anoa
anova
?anova
anova(lmfit)
# lmfit coefficients confidence interval
confint(lmfit)
# Linear model fit
lmfit <- lm(mpg~am, data)
# Subset the data frame to have only "mpg" and "am" columns"
data <- mtcars[, c("mpg","am")]
# Summary of the mtcars
summary(data)
dim(data)
# Linear model fit
lmfit <- lm(mpg~am, data)
summary(lmfit)
# lmfit coefficients confidence interval
confint(lmfit)
# Residual plot of lmfit model
plot(data$am, resid(lm), ylab="Residual plot of linear model fit", xlab="mpg", main = "Residual vs am")
# lmfit coefficients confidence interval
confint(lmfit)
?mtcars
# Load knitr library
library(knitr)
data(mtcars)
# Subset the data frame to have only "mpg" and "am" columns"
data <- mtcars[, c("mpg","am")]
# Summary of the mtcars
summary(data)
# Observe the structure and dimension of the data
str(data)
dim(data)
library(ggplot2)
# Boxplot of the data
p <- ggplot(data, aes(x=as.factor(am), y=mpg, color=factor(am, labels = c("0: Automatic", "1: Manual")))) + geom_boxplot() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")+labs(color="Transmission Type")
p
# Linear model fit
lmfit <- lm(mpg~am, data)
summary(lmfit)
```{r, echo=T}
# lmfit coefficients confidence interval
confint(lmfit)
# Residual plot of lmfit model
plot(data$am, resid(lm), ylab="Residual plot of linear model fit", xlab="mpg", main = "Residual vs am")
# Load knitr library
library(knitr)
data(mtcars)
# Subset the data frame to have only "mpg" and "am" columns"
data <- mtcars[, c("mpg","am")]
# Summary of the mtcars
summary(data)
# Observe the structure and dimension of the data
str(data)
dim(data)
library(ggplot2)
# Boxplot of the data
p <- ggplot(data, aes(x=as.factor(am), y=mpg, color=factor(am, labels = c("0: Automatic", "1: Manual")))) + geom_boxplot() + labs(title = "Boxplot of mtcars data")+ xlab("Transmission")+ylab("mpg")+labs(color="Transmission Type")
p
# Linear model fit
lmfit <- lm(mpg~am, data)
summary(lmfit)
# lmfit coefficients confidence interval
confint(lmfit)
# Residual plot of lmfit model
plot(data$am, resid(lm), ylab="Residual plot of linear model fit", xlab="mpg", main = "Residual vs am")
# lmfit coefficient confidence interval
confint(lmfit$coefficients)
# lmfit coefficient confidence interval
confint(lmfit$coefficients)
coeff
# lmfit coefficient confidence interval
confint(lmfit$coeff)
# lmfit coefficient confidence interval
confint(lmfit)
# Load knitr library
library(knitr)
data(mtcars)
# Subset the data frame to have only "mpg" and "am" columns"
data <- mtcars[, c("mpg","am")]
# Summary of the mtcars
summary(data)
# Observe the structure and dimension of the data
str(data)
dim(data)
# Residual plot of lmfit model
plot(data$am, resid(lmfit), ylab="Residual plot of linear model fit", xlab="mpg", main = "Residual vs am")
# Residual plot of lmfit model
plot(data$am, resid(lmfit), ylab="Residual plot of linear model fit", xlab="mpg", main = "Residual vs am")
# Residual plot of lmfit model
plot(data$am, resid(lmfit), ylab="Residual plot", xlab="mpg", main = "Residual vs am")
# Residual plot of lmfit model
boxplot(data$am, resid(lmfit), ylab="Residual plot", xlab="mpg", main = "Residual vs am")
# Residual plot of lmfit model
plot(data$am, resid(lmfit), ylab="Residual plot", xlab="mpg", main = "Residual vs am")
# Residual plot of lmfit model
plot(data$am, resid(lmfit), ylab="Residual plot", xlab="mpg", main = "Residual vs am")
coefficients(lmfit)
lmfit$coefficients
# lmfit coefficients confidence interval
confint(lmfit)
summary(lmfit)$coefficients
setwd("C:/Users/kshim/Documents/Coursera/datasciencecoursera/7. Linear Regression")
